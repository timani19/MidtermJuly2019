Please answer the below Data Structure Questions:

why do we need data structure?
A. Data structuring is needed for storing and organizing data so that it can be accessed easily and efficiently.

What are the various operations that can be performed on different Data Structures?

A. Traversing, Searching, Inserting, Deleting, Sorting and Merging.

List out the areas in which data structures are applied extensively?

A. Data structure are applied extensively in DBMS, statistical analysis, numerical analysis, Simulation, Artificial Intelligence etc.

what is an Array?

A. Data structure that contains of group of elements.

what is the difference between the Array and ArrayList?

A. Array is static in nature that means it's length is fixed, whereas ArrayList is dynamic in nature.Its resizable. If we want to add an element, it automatically resize its length.

what is LinkedList?

A. LinkedList is a linear data structure where each element is a separate object.

How is an Array different from Linked List?

A.
what is queue?

A. Queue is a linear data structure that follows First-In-First-Out order. First data to be inserted will be the first data to be removed.

what is stack?

A. Stack is a data structure that follows  Last In First Out order. Therefore last data to be inserted will be the first data to be removed.


what is FIFO and LIFO?

A. FIFO: First-in-first-out, LIFO: Last-in-first-out

what is the order of complexity?

A. For input is of size N, we can say that the algorithm will finish at O(1), O(N), O(N^2), O(N^3), O(N*log(N)) etc.

what is the best case to search an element from an array?

Best case search will be when desired element is the first element from the array.
A.
what is the worst case to search an element from an array?

A. When the element is the last element in the array.

w
A. Abstract data type

what is graph in data structure?

A. A graph is a pictorial representation of a set of objects where some pairs of objects are connected by links.

what is the difference between the HashTable and HashMap?

A. HashMap is non-synchronized and HashTable is synchronized.

What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.

A. 1. RDBMS - Array
   2. Network data model - Graph
   3. Hierarchical data model - Trees

How HashMap works in java?

HashMap has keys and values. Values are stored against keys.

What is ArrayIndexOutOfBoundsException in java? When it occurs?

A. ArrayIndexOutOfBoundsException is a class in Java. It occurs when an array has been accessed with an illegal index.

What are the different ways of copying an array into another array?

A. Types:

> Manually- in this method we can manually copy elements one by one.
> Arrays.copyOf() - We can directly copy one array to another by using this method.
> System.arraycopy() - also directly copies from one array to another
> Object.clone()


What is difference between an array and a linked list?

In array each elements are independent but in linked list each node is connected to the previous node. Linked list takes extra memory than array.

What is DFS and BFS?

DFS Stands for Depth-first search (DFS) - this is an algorithm for traversing or searching tree or graph data structure

BFS stands for Breath-first search (BFS) - this is also an algorithm for traversing or searching tree or graph data structure.But this one starts from tree root.

What is Recursion?
A. hen a method calls himself inside the method is called recursion

What are linear and non linear data Structures?

In linear data structures items are organized sequentially or linearly, like arrays, stack, queue

In non linear data structure data items are non organized sequentially.

What is Big-(O)-notation?

A. Big O notations is describes the performance or complexity of an algorithm

Outlined different kind of sorting algorithm with time complexity?

A. 1. Bubble sort: It is a comparison algorithm. Worst case performance: O(n2) Best case performance:O(n) Average case performance: O(n2) Worst case space complexity: O(n) total, O(1) auxiliary Bubble sort is not a
practical sorting algorithm when n is large.

2. Insertion sort: It is a comparison sort in which the sorted array (or list) is built one entry at a time. Worst case performance: O(n2) Best case performance: O(n) Average case performance: O(n2) Worst case space complexity: O(n) total,
O(1) auxiliary

3) Merge sort: It is an O(n log n) comparison-based sorting algorithm. Worst case performance: O(n log n) Best case
   performance: O(n log n) typical Average case performance: O(n log n) Worst case space complexity: O(n) total, O(n)
   auxiliary

4. Selection sort: It is an in-place comparison sort. Worst case performance: O(n2) Best case performance: O(n2) Average case performance: O(n2) Worst case space complexity: O(n) total, O(1) auxiliary

5. Merge sort: It is an O(n log n) comparison-based sorting algorithm. Worst case performance: O(n log n) Best case performance: O(n log n) typical Average case performance: O(n log n) Worst case space complexity: O(n) total, O(n) auxiliary


Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.


